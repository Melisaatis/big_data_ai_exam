# version: '3.9'

# services:
#   web:
#     networks:
#       - web
#   db:
#     image: ghcr.io/eslih/postgres:16.1-alpine
#     environment:
#       - POSTGRES_DB=${POSTGRES_DB}
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#     # ports:
#     #   - "5000:5000"
#     networks:
#       - database


###

version: '3.9'

services:
  web:
    build:
      # context: /Users/melisaatis/Desktop/Melisa_Atish_big_data_ai_exam/part1/pointsApp/Dockerfile
      dockerfile: Dockerfile 
    networks:
      - web
      - database
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s    
      
  

  db:
    image: ghcr.io/eslih/postgres:16.1-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - database
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  web:
  database:

volumes:
  db-data:
